/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_de.h"


#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 22)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 22)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        
        color-mapping = <
                LED_COLOR_ID_GREEN
                LED_COLOR_ID_RED
                LED_COLOR_ID_BLUE
        >;
  };
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define UMLAUTE 4

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        tdcaps: tap_dance_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp CAPS>;
        };
        
        tdumlauta: tap_dance_umlaut_a {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp DE_EXCL>, <&kp DE_A_UMLAUT>;
        };

        tdumlautu: tap_dance_umlaut_u {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp DE_N7>, <&kp DE_U_UMLAUT>;
        };
        
        tdumlauto: tap_dance_umlaut_o {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp DE_N9>, <&kp DE_O_UMLAUT>;
        };

        morph_qm_excl: morph_qm_excl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DE_QMARK>, <&kp DE_EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1! |  2" |  3§  |  4$  |  5%  |                   |  6&  |  7/   |  8(   |  9)  |   0=  |       |
// |  ^°   |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ß?  |   ''  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,;   |  .:  |   //  | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC         &kp DE_N1       &kp DE_N2           &kp DE_N3       &kp DE_N4       &kp DE_N5                               &kp DE_N6   &kp DE_N7       &kp DE_N8       &kp DE_N9     &kp DE_N0                 &none
&kp GRAVE       &kp DE_Q        &kp DE_W            &kp DE_E        &kp DE_R        &kp DE_T                                &kp DE_Y    &kp DE_U        &kp DE_I        &kp DE_O      &kp DE_P                  &kp BSPC
&kp TAB         &kp DE_A        &kp DE_S            &kp DE_D        &kp DE_F        &kp DE_G                                &kp DE_H    &kp DE_J        &kp DE_K        &kp DE_L      &lt UMLAUTE DE_SHARP_S    &kp DE_SQT
&tdcaps         &kp DE_Z        &kp DE_X            &kp DE_C        &kp DE_V        &kp DE_B        &kp C_MUTE  &none       &kp DE_N    &kp DE_M        &kp DE_COMMA    &kp DE_DOT    &kp DE_FSLH               &kp RSHFT
// WINDOWS:                     &kp LGUI            &kp LALT        &kp LCTRL       &mo LOWER       &kp RET     &kp SPACE   &mo RAISE   &kp RCTRL       &kp RALT        &kp RGUI
                                &kp LCTRL           &kp LALT        &kp LGUI        &mo LOWER       &kp RET     &kp SPACE   &mo RAISE   &kp RGUI        &kp RALT        &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |  F6 |  F7 |  F8  |  F9  |  F10 |                   |  F11 |  F12  |  8(   |  9)  |   0=  |  F12  |
// |       |  !  |  @  |  #'  |  -_  |  ~   |                   |  ^   |  &    |  *    |  ((  |   ))  |   |   |
// |       |  == |  == |  +*  |  {   |  }   |        |  |       |  [   |  ]    |  <>   |  ?!  |   \ẞ  |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                       &kp F6       &kp F7      &kp F8       &kp F9           &kp F10      &kp F11
&kp GRAVE       &kp F6          &kp F7          &kp F8          &kp F9          &kp F10                      &kp F11      &kp F12     &kp DE_N8    &kp DE_N9        &kp DE_N0    &kp F12
&trans          &kp DE_EXCL     &kp DE_AT       &kp DE_HASH     &kp DE_MINUS    &kp DE_TILDE                 &kp DE_CARET &kp DE_AMPS &kp DE_ASTRK &kp DE_LPAR      &kp DE_RPAR  &kp DE_PIPE
&trans          &kp DE_Y        &kp DE_EQUAL    &kp DE_PLUS     &kp DE_LBRC     &kp DE_RBRC   &trans &trans  &kp DE_LBKT  &kp DE_RBKT &kp DE_LT    &morph_qm_excl   &kp DE_BSLH  &trans
                                &trans          &trans          &trans          &trans        &trans &trans  &trans       &trans      &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP | HOME |   ^   | END  |  PRSV |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      | PRVS | PLAY  | NEXT |  ß?   |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                  &trans    &trans           &trans          &trans         &trans      &trans
&trans          &kp INS         &kp PSCRN       &kp K_CMENU     &trans          &trans                        &kp PG_UP &kp HOME         &kp UP          &kp END        &kp PSCRN   &trans
&trans          &kp LALT        &kp LCTRL       &kp LSHFT       &trans          &kp CLCK                      &kp PG_DN &kp LEFT         &kp DOWN        &kp RIGHT      &kp DEL     &kp BSPC
&trans          &kp K_UNDO      &kp K_CUT       &kp K_COPY      &kp K_PASTE     &trans        &trans  &trans  &trans    &kp C_PREV       &kp C_PP        &kp C_NEXT     &kp MINUS   &trans
                                &trans          &trans          &trans          &trans        &trans  &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  | USB  | BLE  | TOG   | *    |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  | -    | 7    | 8     | 9    | RET   |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  | +    | 4    | 5     | 6    | RET   |       |
// |        |         |         |         |         |         | RGB_TOG | |      | 0    | 1    | 2     | 3    | RET   |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &out OUT_USB  &out OUT_BLE    &out OUT_TOG  &kp KP_MULTIPLY &none        &none
&none             &ext_power EP_TOG &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &kp KP_MINUS  &kp DE_N7       &kp DE_N8     &kp DE_N9       &kp RET      &none
&none             &ext_power EP_ON  &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_EFF                         &kp KP_PLUS   &kp DE_N4       &kp DE_N5     &kp DE_N6       &kp RET      &none
&none             &ext_power EP_OFF &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &kp DE_N0     &kp DE_N1       &kp DE_N2     &kp DE_N3       &kp RET      &none
                                    &none           &none           &none           &none            &none           &none  &trans        &trans          &trans        &trans
            >;
        };

        umlaute {
// ----------------------------------------------------------------------------------------------------------------------------
// |        |        |        |        |        |        |                  |      |  üÜ  |       |  öÖ  |       |       |
// |        |        |        |        |        |        |                  |      |      |       |      |       |       |
// |        |   äÄ   |        |        |        |        |                  |      |      |       |      |       |       |
// |        |        |        |        |        |        |        | |       |      |      |       |      |       |       |
//                   |        |        |        |        |        | |       |      |      |       |      |
            display-name = "umlaute";
            bindings = <
&trans      &trans          &trans      &trans      &trans      &trans                              &trans      &trans              &trans      &trans              &trans      &trans
&trans      &trans          &trans      &trans      &trans      &trans                              &trans      &kp DE_U_UMLAUT     &trans      &kp DE_O_UMLAUT     &trans      &trans
&trans      &kp DE_A_UMLAUT &trans      &trans      &trans      &trans                              &trans      &trans              &trans      &trans              &trans      &trans
&trans      &trans          &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans              &trans      &trans
                            &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans
            >;
        };

    };
};
